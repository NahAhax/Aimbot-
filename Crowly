local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

local FOVSize = 120
local FOVCircle = Drawing.new("Circle")
FOVCircle.Thickness = 2
FOVCircle.Radius = FOVSize
FOVCircle.Color = Color3.fromRGB(255, 0, 0)
FOVCircle.Filled = false
FOVCircle.Transparency = 1

local function UpdateFOVPosition()
    FOVCircle.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
end

local function IsInFOV(position)
    local screenPos, onScreen = Camera:WorldToViewportPoint(position)
    if not onScreen then return false end

    local center = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
    local distance = (Vector2.new(screenPos.X, screenPos.Y) - center).Magnitude
    return distance <= FOVSize
end

local function IsVisible(part)
    local origin = Camera.CFrame.Position
    local direction = (part.Position - origin).Unit * (part.Position - origin).Magnitude

    local params = RaycastParams.new()
    params.FilterType = Enum.RaycastFilterType.Blacklist
    params.FilterDescendantsInstances = {LocalPlayer.Character}

    local hit = workspace:Raycast(origin, direction, params)
    return not hit or hit.Instance:IsDescendantOf(part.Parent)
end

local function IsEnemy(player)
    local localTeam = LocalPlayer.Team
    return not localTeam or player.Team ~= localTeam
end

local function GetClosestTarget()
    local closest = nil
    local minDistance = math.huge

    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character then
            local head = player.Character:FindFirstChild("Head")
            if head and IsEnemy(player) and IsInFOV(head.Position) and IsVisible(head) then
                local dist = (LocalPlayer.Character.Head.Position - head.Position).Magnitude
                if dist < minDistance then
                    minDistance = dist
                    closest = head
                end
            end
        end
    end
    return closest
end

RunService.RenderStepped:Connect(function()
    UpdateFOVPosition()

    local target = GetClosestTarget()
    if target then
        local newCF = CFrame.new(Camera.CFrame.Position, target.Position)
        Camera.CFrame = newCF
    end
end)
